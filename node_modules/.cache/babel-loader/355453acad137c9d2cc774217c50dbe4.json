{"ast":null,"code":"import { createStore } from 'redux'; // 3. define an initial state for the reducer.\n\nconst initialState = {\n  counter: 0,\n  showCounter: true\n}; // 1. insert reducer function code.\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'INC') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'INC5') {\n    return {\n      counter: state.counter + 5,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'DEC') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'TOGGLE') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n}; // 2. create store, after defining reducer function.\n\n\nconst store = createStore(counterReducer);\nexport default store;\nconst state = {\n  state1: {\n    a: 1,\n    b: 2 // 100 levels\n\n  },\n  state2: {\n    a: 1,\n    b: 2\n  }\n};","map":{"version":3,"names":["createStore","initialState","counter","showCounter","counterReducer","state","action","type","store","state1","a","b","state2"],"sources":["/Users/vishakhavel/Desktop/capillary/redux-counter/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux'\n// 3. define an initial state for the reducer.\nconst initialState = { counter: 0, showCounter: true }\n\n// 1. insert reducer function code.\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'INC') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === 'INC5') {\n    return {\n      counter: state.counter + 5,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === 'DEC') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === 'TOGGLE') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    }\n  }\n\n  return state\n}\n\n// 2. create store, after defining reducer function.\nconst store = createStore(counterReducer)\n\nexport default store\n\n\nconst state = {\n  state1:{\n    a: 1,\n    b:2\n    // 100 levels\n  },\n  state2:{\n    a: 1,\n    b:2\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B,C,CACA;;AACA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACvD,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEE,KAAK,CAACF;IAFd,CAAP;EAID;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;IAC1B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEE,KAAK,CAACF;IAFd,CAAP;EAID;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEE,KAAK,CAACF;IAFd,CAAP;EAID;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAO;MACLL,OAAO,EAAEG,KAAK,CAACH,OADV;MAELC,WAAW,EAAE,CAACE,KAAK,CAACF;IAFf,CAAP;EAID;;EAED,OAAOE,KAAP;AACD,CA9BD,C,CAgCA;;;AACA,MAAMG,KAAK,GAAGR,WAAW,CAACI,cAAD,CAAzB;AAEA,eAAeI,KAAf;AAGA,MAAMH,KAAK,GAAG;EACZI,MAAM,EAAC;IACLC,CAAC,EAAE,CADE;IAELC,CAAC,EAAC,CAFG,CAGL;;EAHK,CADK;EAMZC,MAAM,EAAC;IACLF,CAAC,EAAE,CADE;IAELC,CAAC,EAAC;EAFG;AANK,CAAd"},"metadata":{},"sourceType":"module"}