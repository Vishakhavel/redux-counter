{"ast":null,"code":"import { initial } from 'lodash';\nimport { createStore } from 'redux'; // create a store\n// create a reducer\n\nconst initalState = {\n  counter: 0\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'INC') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'DEC') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["initial","createStore","initalState","counter","counterReducer","state","initialState","action","type","store"],"sources":["/Users/roviros/Desktop/capillary/practice/udemy/redux/01-starting-project 3/src/store/index.js"],"sourcesContent":["import { initial } from 'lodash'\nimport { createStore } from 'redux'\n// create a store\n// create a reducer\nconst initalState = { counter: 0 }\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'INC') {\n    return {\n      counter: state.counter + 1,\n    }\n  }\n\n  if (action.type === 'DEC') {\n    return {\n      counter: state.counter - 1,\n    }\n  }\n\n  return state\n}\n\nconst store = createStore(counterReducer)\n\nexport default store\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CACA;AACA;;AACA,MAAMC,WAAW,GAAG;EAAEC,OAAO,EAAE;AAAX,CAApB;;AACA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBC,YAAyB;EAAA,IAAXC,MAAW;;EACvD,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,OAAO;MACLL,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;IADpB,CAAP;EAGD;;EAED,IAAII,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,OAAO;MACLL,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;IADpB,CAAP;EAGD;;EAED,OAAOE,KAAP;AACD,CAdD;;AAgBA,MAAMI,KAAK,GAAGR,WAAW,CAACG,cAAD,CAAzB;AAEA,eAAeK,KAAf"},"metadata":{},"sourceType":"module"}